/**
 * 给你一个二维整数数组 circles 
 * 其中 circles[i] = [xi, yi, ri] 表示网格上圆心为 (xi, yi) 且半径为 ri 的第 i 个圆，
 * 返回出现在 至少一个 圆内的 格点数目 。
 * 
 * 注意：
 * 格点 是指整数坐标对应的点。
 * 圆周上的点 也被视为出现在圆内的点。
 * 输入：circles = [[2,2,1]]
 * 输出：5
 * 
 * 输入：circles = [[2,2,2],[3,4,1]]
 * 输出：16
 */

const circles = [[2, 2, 1]]
//中心点： (2, 2)
//半径： 1
//上、下、左、右坐标点：(2, 3), (2, 1), (1, 2), (3, 2)

const circles1 = [
    [2, 2, 2],
    [3, 4, 1]
]

// 中心点：(2, 2), (3, 4)
// 半径： 2， 1
// 第一个⚪坐标点：(0, 2), (0, 4), (2, 0), (2, 4)
// 第二个⚪坐标点： (3, 3), (3, 5), (2, 4), (4, 4)



 